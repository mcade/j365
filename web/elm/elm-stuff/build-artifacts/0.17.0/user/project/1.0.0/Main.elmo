var _user$project$Main$welcomeView = A2(
	_elm_lang$html$Html$h2,
	_elm_lang$core$Native_List.fromArray(
		[]),
	_elm_lang$core$Native_List.fromArray(
		[
			_elm_lang$html$Html$text('Welcome to Elm Journals!')
		]));
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$Model = F2(
	function (a, b) {
		return {journalListModel: a, currentView: b};
	});
var _user$project$Main$JournalShowMsg = function (a) {
	return {ctor: 'JournalShowMsg', _0: a};
};
var _user$project$Main$journalShowView = function (journal) {
	return A2(
		_elm_lang$html$Html_App$map,
		_user$project$Main$JournalShowMsg,
		_user$project$Components_JournalShow$view(journal));
};
var _user$project$Main$UpdateView = function (a) {
	return {ctor: 'UpdateView', _0: a};
};
var _user$project$Main$JournalListMsg = function (a) {
	return {ctor: 'JournalListMsg', _0: a};
};
var _user$project$Main$journalListView = function (model) {
	return A2(
		_elm_lang$html$Html_App$map,
		_user$project$Main$JournalListMsg,
		_user$project$Components_JournalList$view(model.journalListModel));
};
var _user$project$Main$pageView = function (model) {
	var _p0 = model.currentView;
	switch (_p0.ctor) {
		case 'RootView':
			return _user$project$Main$welcomeView;
		case 'JournalListView':
			return _user$project$Main$journalListView(model);
		default:
			return _user$project$Main$journalShowView(_p0._0);
	}
};
var _user$project$Main$JournalShowView = function (a) {
	return {ctor: 'JournalShowView', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'JournalListMsg':
				var _p5 = _p1._0;
				var _p2 = _p5;
				if (_p2.ctor === 'RouteToNewPage') {
					var _p3 = _p2._0;
					if (_p3.ctor === 'ShowView') {
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{
									currentView: _user$project$Main$JournalShowView(_p3._0)
								}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					} else {
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
					}
				} else {
					var _p4 = A2(_user$project$Components_JournalList$update, _p5, model.journalListModel);
					var updatedModel = _p4._0;
					var cmd = _p4._1;
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{journalListModel: updatedModel}),
						_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$JournalListMsg, cmd)
					};
				}
			case 'UpdateView':
				var _p7 = _p1._0;
				var _p6 = _p7;
				if (_p6.ctor === 'JournalListView') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{currentView: _p7}),
						_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$JournalListMsg, _user$project$Components_JournalList$fetchJournals)
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{currentView: _p7}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$JournalListView = {ctor: 'JournalListView'};
var _user$project$Main$RootView = {ctor: 'RootView'};
var _user$project$Main$initialModel = {journalListModel: _user$project$Components_JournalList$initialModel, currentView: _user$project$Main$RootView};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$header = A2(
	_elm_lang$html$Html$div,
	_elm_lang$core$Native_List.fromArray(
		[]),
	_elm_lang$core$Native_List.fromArray(
		[
			A2(
			_elm_lang$html$Html$h1,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html$text('Elm Journals')
				])),
			A2(
			_elm_lang$html$Html$ul,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$li,
					_elm_lang$core$Native_List.fromArray(
						[]),
					_elm_lang$core$Native_List.fromArray(
						[
							A2(
							_elm_lang$html$Html$a,
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html_Attributes$href('#'),
									_elm_lang$html$Html_Events$onClick(
									_user$project$Main$UpdateView(_user$project$Main$RootView))
								]),
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html$text('Home')
								]))
						])),
					A2(
					_elm_lang$html$Html$li,
					_elm_lang$core$Native_List.fromArray(
						[]),
					_elm_lang$core$Native_List.fromArray(
						[
							A2(
							_elm_lang$html$Html$a,
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html_Attributes$href('#articles'),
									_elm_lang$html$Html_Events$onClick(
									_user$project$Main$UpdateView(_user$project$Main$JournalListView))
								]),
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html$text('Journals')
								]))
						]))
				]))
		]));
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('elm-app')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Main$header,
				_user$project$Main$pageView(model)
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})
};
